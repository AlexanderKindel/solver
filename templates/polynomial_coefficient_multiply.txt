struct %main.base_type%*%main.type_name%_%coefficient.multiply%(struct Stack*restrict output_stack, struct Stack*restrict local_stack, struct %main.base_type%*a, struct %coefficient.base_type%*b#main.has_misc_parameter, struct %misc.base_type%*%main.misc_name%#)
{
    if (%coefficient.base_type_name%_equals(b, %coefficient.additive_identity%))
    {
        return %main.additive_identity%;
    }
    struct %main.base_type%*out = polynomial_allocate(output_stack, a->coefficient_count);
    for (size_t i = 0; i < a->coefficient_count; ++i)
    {
        out->coefficients[i] = %coefficient.multiply%(output_stack, local_stack, a->coefficients[i], b#main.has_misc_parameter, %main.misc_name%#);
    }
    return out;
}