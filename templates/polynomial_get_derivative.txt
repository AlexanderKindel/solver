struct %main.base_type%*%main.type_name%_get_derivative(struct Stack*restrict output_stack, struct Stack*restrict local_stack, struct %main.base_type%*a)
{
    if (!a->coefficient_count)
    {
        return a;
    }
    void*local_stack_savepoint = local_stack->cursor;
    struct %main.base_type%*out = polynomial_allocate(output_stack, a->coefficient_count - 1);
    struct Integer*multiplier = &zero;
    for (size_t i = 1; i < a->coefficient_count; ++i)
    {
        multiplier = integer_add(local_stack, multiplier, &one);
        out->coefficients[i - 1] = %coefficient.integer_multiply%(output_stack, local_stack, a->coefficients[i], multiplier);
    }
    local_stack->cursor = local_stack_savepoint;
    return out;
}